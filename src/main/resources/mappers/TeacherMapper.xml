<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.managesystem.managesystempackage.repository.before.teacher.TeacherRepository">
    <select id="teacherLogin" parameterType="com.managesystem.managesystempackage.entity.Teacher" resultType="com.managesystem.managesystempackage.entity.Teacher">
        select * from teacher where teacherNumber = #{teacherNumber} and teacherPwd = #{teacherPwd}
    </select>
    <insert id="teacherSave" parameterType="com.managesystem.managesystempackage.entity.Teacher">
        insert into teacher(teacherName, teacherNumber, teacherPwd) values (#{teacherName}, #{teacherNumber}, #{teacherPwd})
    </insert>
    <insert id="dutyAdd" parameterType="Duty">
        insert into duty(dutyName, dutySummary, dutyDescriptionFile, teacherId, dutySize, dutySelectedNumber) values (#{dutyName}, #{dutySummary}, #{dutyDescriptionFile} , #{teacherId}, #{dutySize}, #{dutySelectedNumber})
    </insert>
    <select id="getDutyByTeacherIdByPage" resultType="Duty">
        select * from duty where teacherId = #{teacherId} limit #{perPageSize} offset #{startIndex}
    </select>

    <select id="getAllDutyByTeacherId" resultType="int">
        select count(*) from duty where teacherId = #{teacherId}
    </select>
    
    <resultMap id="dutyWithTeacherName" type="Duty">
        <id column="dutyId" property="dutyId"/>
        <result column="dutyName" property="dutyName"/>
        <result column="dutySummary" property="dutySummary"/>
        <result column="dutyDescriptionFile" property="dutyDescriptionFile"/>
        <result column="teacherId" property="teacherId"/>
        <result column="dutySize" property="dutySize"/>
        <result column="dutySelectedNumber" property="dutySelectedNumber"/>
        <association property="teacher" javaType="com.managesystem.managesystempackage.entity.Teacher">
            <id column="teacherId" property="teacherId"/>
            <result column="teacherName" property="teacherName"/>
        </association>
    </resultMap>

    <select id="getDutyByPage" resultMap="dutyWithTeacherName">
        select a.*, b.teacherName from duty as a left join teacher as b on a.teacherId = b.teacherId limit #{perPageSize} offset #{startIndex}
    </select>

    <select id="getAllDuty" resultType="int">
        select count(*) from duty
    </select>

    <resultMap id="studentGroupWithLeader" type="StudentGroup">
        <id column="studentGroupId" property="studentGroupId"/>
        <result column="studentGroupNumber" property="studentGroupNumber"/>
        <result column="leaderStudentId" property="leaderStudentId"/>
        <result column="dutyId" property="dutyId"/>
        <result column="studentGroupReportOneFile" property="studentGroupReportOneFile"/>
        <result column="studentGroupReportTwoFile" property="studentGroupReportTwoFile"/>
        <result column="studentGroupReportThreeFile" property="studentGroupReportThreeFile"/>
        <result column="studentGroupScore" property="studentGroupScore"/>
        <result column="studentGroupCommons" property="studentGroupCommons"/>
        <association property="student" javaType="com.managesystem.managesystempackage.entity.Student">
            <id column="studentId" property="studentId"/>
            <result column="studentName" property="studentName"/>
        </association>
    </resultMap>

    <select id="getStudentGroupProcessByDutyId" resultMap="studentGroupWithLeader">
        select a.*, b.studentName from studentGroup as a left join student as b on a.leaderStudentId = b.studentId where dutyId = #{dutyId}
    </select>
    <select id="checkDutyByTeacherId" resultType="int">
        select count(*) from duty where teacherId = #{teacherId}
    </select>
    <select id="selectOneDuty" resultType="Duty">
        select * from duty where dutyId = #{dutyId}
    </select>
    <update id="updateDutyByDutyConcludeFile" parameterType="Duty">
        update duty set (dutyName, dutySummary, dutyDescriptionFile, dutySize) = (#{dutyName}, #{dutySummary}, #{dutyDescriptionFile}, #{dutySize}) where dutyId = #{dutyId}
    </update>
    <update id="updateDutyByDutyExceptFile" parameterType="Duty">
        update duty set (dutyName, dutySummary, dutySize) = (#{dutyName}, #{dutySummary}, #{dutySize}) where dutyId = #{dutyId}
    </update>
    <select id="checkStudentSelectedDuty" resultType="int">
        select count(*) from studentGroupMember where studentId = #{studentId}
    </select>
    <select id="getStudentNameAndIdByStudentGroupNumber" resultType="studentGroupMember">
        select studentId, studentName from studentGroupMember where studentGroupNumber = #{studentGroupNumber}
    </select>
    <update id="setLeaderByStudentId" parameterType="int">
        update studentGroupMember set leader = true where studentId = #{studentId};
        update student set isLeader = 'æ˜¯' where studentId = #{studentId};
        update studentGroup set leaderStudentId = #{studentId}
    </update>
    <update id="updateGrade">
        update studentGroup set studentGroupScore = #{studentGroupScore} where studentGroupNumber = #{studentGroupNumber}
    </update>
    <select id="getStudentGroupInfoByStudentNumber" resultType="StudentGroup">
        select * from studentGroup where studentGroupNumber = #{studentGroupNumber}
    </select>
    <select id="checkFirstReport" resultType="String">
        select studentGroupReportOneFile from studentGroup where studentGroupNumber = #{studentGroupNumber}
    </select>
    <select id="checkSecondReport" resultType="String">
        select studentGroupReportTwoFile from studentGroup where studentGroupNumber = #{studentGroupNumber}
    </select>
    <select id="checkThirdReport" resultType="String">
        select studentGroupReportThreeFile from studentGroup where studentGroupNumber = #{studentGroupNumber}
    </select>
</mapper>