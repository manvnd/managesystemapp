<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.managesystem.managesystempackage.repository.admin.AdminRepository">
    <select id="adminLogin" parameterType="com.managesystem.managesystempackage.entity.Admin" resultType="com.managesystem.managesystempackage.entity.Admin">
        select * from admin where adminName = #{adminName} and adminPwd = #{adminPwd}
    </select>
    <select id="selectStudentsByPage" parameterType="int" resultType="com.managesystem.managesystempackage.entity.Student">
        select adminId, adminName, adminNumber, adminPwd, studentGroupId, isLeader from student limit #{perPageSize} offset #{startIndex}
    </select>
    <delete id="studentDelete" parameterType="int">
        delete from student where studentId = #{studentId}
    </delete>
    <select id="selectAllStudents" resultType="int">
        select count(*) from student
    </select>
    <insert id="studentAdd" parameterType="Student">
        insert into student (studentName, studentNumber, studentPwd) values (#{studentName}, #{studentNumber}, #{studentPwd})
    </insert>
    <update id="studentUpdateExceptPwd" parameterType="Student">
        update student set(studentName, studentNumber, studentGroupId, isLeader) = (#{studentName}, #{studentNumber}, #{studentGroupId}, #{isLeader}) where studentId = #{studentId}
    </update>
    <update id="studentUpdateConcludePwd" parameterType="Student">
        update student set(studentName, studentNumber, studentPwd, studentGroupId, isLeader) = (#{studentName}, #{studentNumber}, #{studentPwd}, #{studentGroupId}, #{isLeader}) where studentId = #{studentId}
    </update>
    <select id="selectOneStudent" resultType="Student">
        select * from student where studentId = #{studentId}
    </select>

    <select id="selectTeachersByPage" parameterType="int" resultType="com.managesystem.managesystempackage.entity.Teacher">
        select teacherId, teacherName, teacherNumber, teacherPwd from teacher limit #{perPageSize} offset #{startIndex}
    </select>
    <delete id="teacherDelete" parameterType="int">
        delete from teacher where teacherId = #{teacherId}
    </delete>
    <select id="selectAllTeachers" resultType="int">
        select count(*) from teacher
    </select>
    <insert id="teacherAdd" parameterType="Teacher">
        insert into teacher (teacherName, teacherNumber, teacherPwd) values (#{teacherName}, #{teacherNumber}, #{teacherPwd})
    </insert>
    <update id="teacherUpdateExceptPwd" parameterType="Teacher">
        update teacher set(teacherName, teacherNumber) = (#{teacherName}, #{teacherNumber}) where teacherId = #{teacherId}
    </update>
    <update id="teacherUpdateConcludePwd" parameterType="Teacher">
        update teacher set(teacherName, teacherNumber, teacherPwd) = (#{teacherName}, #{teacherNumber}, #{teacherPwd}) where teacherId = #{teacherId}
    </update>
    <select id="selectOneTeacher" resultType="Teacher">
        select * from teacher where teacherId = #{teacherId}
    </select>
</mapper>